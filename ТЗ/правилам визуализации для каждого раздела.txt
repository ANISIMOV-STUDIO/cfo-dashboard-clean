# Правила визуализации по разделам

## 1) Продажи

**KPI (в карточках):**
Выручка (текущий период), MoM %, YoY %, Средний чек, Кол-во клиентов, ARPU/Выручка на клиента.

**Виджеты:**

1. **Динамика выручки** — линии (Факт/План/Прогноз/ПГ), «млн ₽, помесячно». По умолчанию: Факт+План.
2. **Структура выручки по сегментам** (товарные группы/каналы/регионы) — **stacked bars** за период из фильтра, топ-5 + «Прочее».
3. **Воронка продаж** (опц.) — горизонтальные бары: Лиды → Сделки → Отгрузки. Только 3–5 стадий, без мелких делений.
4. **Top-N клиенты** — таблица 10 строк: Выручка, ∆ к ПГ, доля %. В последней колонке мини-sparkline (за 6–12 мес).

**Расчётные правила:**

* MoM = (Фактₜ / Фактₜ₋₁ − 1) × 100%.
* YoY = (Фактₜ / Фактₜ₋₁₂ − 1) × 100%.
* «ПГ» = соответствующий период прошлого года.
* Единицы приводим к выбранным (тыс/млн/млрд), денежные — без НДС/с НДС по фильтру.

---

## 2) Прибыльность

**KPI:** Валовая маржа %, EBITDA %, Чистая маржа %, Валовая прибыль, OPEX (сумма и доля).

**Виджеты:**

1. **Маржинальность, %** — максимум 3 серии (Валовая/EBITDA/Чистая). 4-ю прячем в «Настройках».
2. **EBITDA-мост** (waterfall) — GP → +Прочие доходы → −OPEX → −Прочие расходы → EBITDA. Отрицательные шаги красные.
3. **Структура себестоимости** — **stacked bars**: COGS разложить по крупным статьям (материалы/ЗП/логистика/прочее).
4. **Price-Volume-Mix** (опц., если есть данные) — дивергентные бары: вклад Цена / Объём / Микс в ∆ валовой прибыли.

**Расчёты:**

* Маржа % = Показатель / Выручка × 100.
* Мост: шаги должны суммироваться в итог периода.
* PVM: расчёт строго согласовать с методологией (не смешивать с сезонностью).

---

## 3) ДДС и ликвидность

**KPI:** Остаток ДС, Runway (мес), OCF/ICF/FCF, Кредитный долг, **DSCR**, **Quick Ratio**.

**Виджеты:**

1. **Остаток ДС, тренд** — линия/area, «млн ₽, помесячно».
2. **Движение ДС (waterfall)** — Opening → OCF → ICF → FCF → Closing. Притоки зелёные, оттоки красные, итог серый.
3. **Цикл обращения денег (CCC)** — три линии: DIO, DSO, DPO; внизу карточки — CCC = DIO + DSO − DPO.
4. **Ликвидность/покрытие** — мини-карточки с DSCR, Quick, Current. Цвет по порогам.

**Расчёты:**

* Runway = Остаток ДС / |ср. ежемес. чистый отток| (если оттока нет — «—»).
* DSCR = OCF / Платежи по долгу; Quick = (ДС + Дебиторка) / Краткоср. обязательства.

---

## 4) Дебиторка

**KPI:** DSO (дни), Просрочка %, Доля 90+ дней, Резерв покрытие %.

**Виджеты:**

1. **Aging-разбивка** — горизонтальные бары: 0–30 / 31–60 / 61–90 / 90+. Подписи в % и сумме.
2. **Top-должники** — таблица 10 строк: Контрагент, Сумма, Просрочка дней, Менеджер, План инкассации (дата/сумма).
3. **Инкассация: План vs Факт** — бары по неделям/месяцам, дивергентно от нуля.
4. **DSO тренд** — линия за 12–18 мес.

**Правила:**

* Просроченную часть «тоннируем» красным сверху бара по каждому должнику.
* Если включен «План инкассации» — рисуем тонкой линией поверх факта.

---

# Контракты данных (JSON), чтобы 1С легко сериализовала

**Фильтры (в обе стороны):**

```json
{
  "period": {"from":"2024-01-01","to":"2024-12-31","granularity":"month"},
  "orgIds":[ "uuid1","uuid2" ],
  "scenario":"fact|plan|forecast|py",
  "units":"thousand|million|billion",
  "currency":"RUB",
  "vatIncluded": true
}
```

**Данные (минимально необходимое):**

```json
{
  "sales": {
    "revenueMonthly":[{"period":"2024-01","fact":0,"plan":0,"forecast":0,"py":0}],
    "bySegment":[{"name":"Розница","value":0},{"name":"Опт","value":0}],
    "topCustomers":[{"name":"ООО Х","amount":0,"deltaPgPct":0,"sharePct":0,"spark":[0,0,0]}]
  },
  "profit": {
    "marginsMonthly":[{"period":"2024-01","grossPct":0,"ebitdaPct":0,"netPct":0}],
    "ebitdaBridge":[{"step":"GP","value":0},{"step":"OPEX","value":-0},{"step":"EBITDA","value":0}],
    "cogsStructure":[{"name":"Материалы","value":0}]
  },
  "cash": {
    "balanceMonthly":[{"period":"2024-01","cash":0}],
    "cfWaterfall":[{"step":"Opening","value":0},{"step":"OCF","value":0},{"step":"ICF","value":0},{"step":"FCF","value":0},{"step":"Closing","value":0}],
    "cccMonthly":[{"period":"2024-01","dio":0,"dso":0,"dpo":0}],
    "ratios":[{"period":"2024-01","dscr":1.2,"quick":0.9,"current":1.4}]
  },
  "ar": {
    "aging":[{"bucket":"0-30","value":0},{"bucket":"31-60","value":0},{"bucket":"61-90","value":0},{"bucket":"90+","value":0}],
    "topDebtors":[{"name":"Контрагент","amount":0,"overdueDays":0,"manager":"Иванов","collectionPlan":{"date":"2024-12-20","amount":0}}],
    "dsoMonthly":[{"period":"2024-01","dso":42}]
  }
}
```

**Требования к сериализации 1С:** только простые типы (Число/Строка/Булево), массивы и структуры; даты — ISO-строки `YYYY-MM`/`YYYY-MM-DD`; никакого `ЗначениеХранилища/Неопределено`.

---

# Таск-лист: сборка «одним файлом» и интеграция в 1С

## A. Верстка/дизайн

1. Ввести токены (цвета, типографика, размеры) и базовые классы.
2. Сверстать AppShell со sticky-зонами (Header, FilterBar, KPI, Tabs, Content).
3. Сверстать компоненты: KPICard, Tabs, WidgetCard, Toasts, Segmented, Select/Multi, DateRange, Dropdown, Buttons.
4. Разложить «Обзор» по сетке 12 колонок (8+4; 8+4), выровнять высоты.

## B. Графики/адаптер

1. Ввести тонкий **adapter-слой**: `renderLine()`, `renderWaterfall()`, `renderDivergentBars()`, единые легенда/tooltip/цвета.
2. Реализовать drag-to-zoom (опц.) и кнопку «Сброс» в тулбаре карточки.
3. Ограничить одновременно видимые серии ≤3 (переключение в легенде).

## C. Данные и API

1. Реализовать глобальные методы окна:

   * `setFilters(state)` — отобразить выбранные пользователем фильтры;
   * `applyFilters(state)` — зафиксировать и запросить данные из 1С;
   * `updateData(payload)` — перерисовать все виджеты;
   * `showToast(level,title,text)`.
2. Проверить все состояния: loading / empty / error / no access.

## D. Однофайловая сборка

1. Скомпоновать **inline CSS** (≤15 КБ), **SVG-спрайт** и **inline JS**.
2. Все внешние иконки/шрифты удалить; только системный шрифт и SVG.
3. Минифицировать, удалить комментарии; цель total ≤250 КБ.
4. Оставить плейсхолдеры для 1С: `%%INLINE_CSS%%`, `%%SVG_SPRITE%%`, `%%INLINE_LIBS_JS%%`, `%%APP_BOOTSTRAP%%`.

## E. Встраивание в 1С (архитектура без кода)

1. **Расширение**: Обработка «ДашбордKPI» с формой и элементом ПолеHTML.
2. **Общий модуль (сервер, вызов сервера):**

   * `ПолучитьДанныеДашборда(Параметры)` — готовит JSON в формате выше.
   * Отдельные функции: Продажи/Прибыль/ДДС/Дебиторка.
3. **Форма обработки (клиент):**

   * ПриОткрытии: загрузить однофайловый HTML в ПолеHTML.
   * Связка фильтров формы с `setFilters/applyFilters/updateData` через `HTMLДокумент.ВыполнитьСценарий`.
4. **Серверные запросы** — СКД/запросы с агрегатами по месяцам; всё приводить к выбранным единицам до сериализации.

## F. Контроль качества/приёмка

* **Производительность:** первый рендер ≤200 мс, реакция на фильтры ≤300–500 мс; плавность без рывков; отсутствие перерисовки вне видимых зон.
* **UI:** кликабельность ≥32×32, контраст AA, единый формат чисел, отсутствие горизонтального скролла на 1280×800.
* **Данные:** суммы/итоги сходятся с 1С по отчётам; мосты сходятся до копейки.
* **Надёжность:** пустые данные → «Нет данных»; ошибки → тост с текстом; нет зависаний.

---